# Description:
This lab will test your ability to use functions, pointers and structures.

Your program files should be called StudentInfo.c and StudentInfo.h.

Your StudentInfo.h should contain the following:
#define MAX_STR 32
#define NUM_SUBJECTS 6

//Create struct Subject with members
//name (char array, array size MAX_STR) and
//mark (integer)


//Create struct StudentInfo with members
//lastName (char array, array size MAX_STR),
//studentId (integer), and
//subject (struct Subject array, array size NUM_SUBJECTS)


//Create the following function prototypes:
//InitializeInfo - returns void, accepts the address of struct StudentInfo
//AverageMark - returns float, accepts the address of an array of struct Subject
//MaximumMark - returns integer, accepts the address of an array of struct Subject
//MinimumMark - returns integer, accepts the address of an array of struct Subject


Your StudentInfo.c should contain the following:
#include "StudentInfo.h"

//InitializeInfo - returns void, accepts the address of struct StudentInfo
//Sets the last name to a null string. This can be accomplished by setting the first character
// in the last name array to the null terminator '\0'.
//Sets the student id to 0.
//Goes through the subject array (NUM_SUBJECTS) and for each subject
// sets name to a null string and
// sets mark to 0.


//AverageMark - returns float, accepts the address of struct Subject
//
//Uses a for-next loop to go through all the marks (up to NUM_SUBJECTS).
// Once an invalid mark is reached (mark equals zero), the loop terminates
//
//Returns the running total divided by the number of marks.


//MaximumMark - returns integer, accepts the address of struct Subject
//
//Uses a for-next loop to go through all the marks (up to NUM_SUBJECTS).
// Once an invalid mark is reached (mark equals zero), the loop terminates
//
//The index of the maximum mark is returned


//MinimumMark - returns integer, accepts the address struct Subject
//
//Uses a for-next loop to go through all the marks (up to NUM_SUBJECTS).
// Once an invalid mark is reached (mark equals zero), the loop terminates
//
//The index of the minimum mark is returned


StudentMain.c will prompt for student Information and print out the average mark, the maximum mark, and the minimum mark. Keep in mind that the student could be studying up to 6 subjects. 

# Sample Run:
A sample run is as follows:

    Enter the student's last name: Bollinger
    Enter the student's id: 111222
    Enter the number of subjects: 3
    Enter the name of subject 1: Business
    Enter the mark for Business: 90
    Enter the name of subject 2: Accounting
    Enter the mark for Accounting: 78
    Enter the name of subject 3: Marketing
    Enter the mark for Marketing: 86

    Bollinger with id 111222 has an average mark of 84.67.
    Bollinger's highest mark was 90 in Business.
    Bollinger's lowest mark was 78 in Accounting. 
